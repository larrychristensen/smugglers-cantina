AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  smugglers-cantina

  Smuggler Cantina Template
  
Globals:
  Function:
    Timeout: 60

Resources:

  CharacterCreationQueue:
    Type: AWS::SQS::Queue
    Properties:
      MaximumMessageSize: 1024
      VisibilityTimeout: 90

  CharactersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: user-id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: user-id
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: characters-by-user
          KeySchema:
            - AttributeName: user-id
              KeyType: HASH
          Projection:
            NonKeyAttributes:
              - name
              - species
              - career
            ProjectionType: INCLUDE
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  
  CharacterCreationLambda:
    Type: AWS::Serverless::Function
    Properties:
      InlineCode: |
        const AWS = require('aws-sdk');
        const documentClient = new AWS.DynamoDB.DocumentClient();

        exports.handler = async (event) => {
          const requestItems = event.Records
            .map(record => record.body)
            .map(s => JSON.parse(s))
            .map(ddb => {
              return {PutRequest: {Item: ddb}}});
      
          console.log("REQUEST ITEMS", requestItems);

          const tableName = process.env.TABLE_NAME;
          const tableRequest = {};
          tableRequest[tableName] = requestItems;
   
          const request = {
            RequestItems: tableRequest
          };
   
          await documentClient.batchWrite(request).promise();
        };
      Environment:
        Variables:
          TABLE_NAME: !Ref CharactersTable
      Runtime: nodejs12.x
      Handler: index.handler
      Policies:
        - AWSLambdaExecute
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:BatchWriteItem
              Resource: !GetAtt CharactersTable.Arn
      Tracing: Active
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt CharacterCreationQueue.Arn
            BatchSize: 10
            Enabled: true
